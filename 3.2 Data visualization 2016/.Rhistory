df %>%
filter(Name =="Remo") %>%
select(iso_code)
newsum <- function(x, y){
x + y
}
newsum(3, 4)
newsum <- function(x, y){
return(x + y)
}
newsum(3, 4)
newsum <- function(x, y){
x**2
x + y
}
newsum(3, 4)
newsum(3, 4)
newsum <- function(x, y){
x**2
x + y
}
newsum <- function(x, y){
x <- x**2
x + y
}
newsum(3, 4)
x <- 1
newsum(3, 4)
newsum <- function(x, y =  10){
x <- x**2
x + y
}
newsum(3, 4)
newsum(3)
newsum(x = 3, y = 10)
newsum(3, 4)
newsum(3)
newsum <- function(x = 10, y){
x <- x**2
x + y
}
newsum(3)
newsum(,3)
newsum(y = 3)
5:20
5:20
d <- 5:20
d <- 5:20
d > 7
d[11]
d[d > 7]
a <- mtcars
a <- cars
a <- mtcars
View(a)
2 + "a"
baltic_100 <- read.csv("~/_DATA/OneDrive1/_Work/Scripts/_R/data baltic 100/baltic_100.csv")
View(baltic_100)
str(baltic_100)
baltic_100[33,2]
baltic_100$Latvian
a <- mtcars
a$mpg
a$mpg[a$mpg > 12]
t(a)
class(t(a))
data.frame(t(a))
View(a)
a[a$mpg > 12, "gear"]
a[a$mpg > 12, gear]
a[a$mpg > 12, 3:6]
a[a$mpg > 12, 3:5]
a[a$mpg > 12, 3:5]
d <- a[a$mpg > 12, 3:5]
sum(d)
d <- a[a$mpg > 12, 3:5]
sum(d)
sum(a[a$mpg > 12, 3:5])
library("dyplyr")
library("dplyr")
a %>%
filter(mpg > 12)
a %>%
filter(mpg > 12)
a %>%
filter(mpg > 12) %>%
select(3:5)
a %>%
filter(mpg > 12) %>%
select(3:5) %>%
sum()
df <- read.csv("http://goo.gl/lK96vb")
df %>%
filter(X55A.Numeral.Classifiers == "3 Obligatory",
X87A.Order.of.Adjective.and.Noun == "1 Adjective-Noun") %>%
nrow()
df %>%
filter(X55A.Numeral.Classifiers == "3 Obligatory",
X87A.Order.of.Adjective.and.Noun == "1 Adjective-Noun") %>%
nrow() ->
f
f
df["Remo", "iso"]
df["Remo", "iso_code"]
df[df$Name == "Remo", "iso_code"]
df[df$Name == "Remo", df$iso_code]
df[df$Name == "Remo", iso_code]
df[df$Name == "Remo", "iso_code"]
df %>%
filter(Name = "Remo")
df %>%
filter(Name == "Remo")
df %>%
filter(Name == "Remo") %>%
head()
df %>%
filter(Name =="Remo") ->
z
View(z)
df %>%
filter(Name =="Remo") %>%
select(iso_code) ->
z
z
sum.new <- function(x, y){
x+y
}
sum.new(3,6)
sum.new <- function(x, y){
x^2
x+y
}
sum.new <- function(x, y){
x <- x^2
x+y
}
sum.new(3,6)
sum.new <- function(x, y = 10){
x <- x^2
x+y
}
sum.new(3,6)
sum.new(3)
sum.new(x = 4, y = 4)
sum.new <- function(x = 10, y){
x <- x^2
x+y
}
sum.new(3)
sum.new(,3)
sum.new(y = 3)
range(57)
range(1:57)
n <- -5
new.factorial.by.Nastya.and.C <- function(n){
if(n < 0){
return("You are…")
}
}
new.factorial.by.Nastya.and.C(n)
prod(1, 5)
prod(1:5)
new.factorial.by.Nastya.and.C <- function(n){
if(n < 0){
return("You are…")
}
else if(n == 0){
return(1)
}
else {
prod(1:n)
}
}
}
new.factorial.by.Nastya.and.C <- function(n){
if(n < 0){
return("You are…")
}
else if(n == 0){
return(1)
}
else {
prod(1:n)
}
}
new.factorial.by.Nastya.and.C(-2)
new.factorial.by.Nastya.and.C(0)
new.factorial.by.Nastya.and.C(5)
new.factorial.by.Nastya.and.C(
n
)
new.factorial.by.Nastya.and.C(
n
)
new.factorial.by.Nastya.and.C
(
n
)
sum
prod
list
na.omit()
na.omit
plot
order
View(d)
5+5
1:10
5+5
1:10
7:2
1:10
seq(from = 10, by = 7, length.out = 100)
seq(length.out = 100, from = 10, by = 7)
seq(length.out = 100
,from = 10,
by = 7)
seq(length.out = 100
,from = 10,
by = 7)
?seq
1:100
1:100*7
1:100*7+3
sum(1:100*7+3)
sum(1:100*7+3)
log(13, 1338716)
log(1338716, 13)
log(x = 1338716, base = 13)
log(base = 13, x = 1338716)
choose(3, 33)
choose(33, 3)
choose(25, 3)
choose(33, 25)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 1)
sample(1:6, 2, replace = TRUE)
sample(1:6, 2, replace = TRUE)
sample(1:6, 2, replace = TRUE)
sample(1:6, 2, replace = TRUE)
sample(1:6, 2, replace = TRUE)
sample(1:6, 2, replace = TRUE)
sample(1:6, 2, replace = TRUE)
sample(1:6, 2, replace = TRUE)
sample(1:6, 2, replace = TRUE)
sample(1:6, 2, replace = T)
sample(1:6, 2, replace = T)
sample(1:6, 2, replace = T)
sample(1:6, 2, replace = True)
seq(f = 10, b = 7, l = 100)
seq(fr = 10, b = 7, l = 100)
sample(1:6, 2, replace = T)
sample(1:6, 2, replace = T)
sample(1:6, 2, replace = T)
sample(1:6, 2, replace = T)
sample(1:6, 2, replace = T)
sample(1:6, 2, replace = T)
sample.int(100, 2)
sample.int(100, 2)
sample.int(100, 2)
sample.int(100, 2)
sample.int(100, 2)
sample.int(100, 2)
sample.int(100, 2)
sample.int(100, 2)
sample.int(100, 2)
sample.int(100, 2)
sample.int(100, 2)
sample(100, 2)
sample(100, 2)
sample(100, 2)
sample(100, 2)
sample(100, 2)
sample(100, 2)
sample(100, 2)
sample(100, 2)
sample(100, 2)
sample(100, 2)
set.seed(100)
sample(1:6, 2, replace = T)
set.seed(100)
sample(1:6, 2, replace = T)
set.seed(100)
sample(1:6, 2, replace = T)
set.seed(100)
sample(1:6, 2, replace = T)
set.seed(100)
sample(1:6, 2, replace = T)
set.seed(100)
sample(1:6, 2, replace = T)
set.seed(100)
sample(1:6, 2, replace = T)
set.seed(100)
sample(1:6, 2, replace = T)
set.seed(100)
sample(1:6, 2, replace = T)
set.seed(100)
sample(1:6, 2, replace = T)
set.seed(100)
sample(1:6, 2, replace = T)
set.seed(100)
sample(1:6, 2, replace = T)
set.seed(100)
sample(1:6, 2, replace = T)
set.seed(100)
sample(1:6, 2, replace = T)
set.seed(100)
sample(1:6, 2, replace = T)
set.seed(100)
sample(1:6, 2, replace = T)
install.packages("phonTools")
library(phonTools)
detach("package:phonTools", unload=TRUE)
library("phonTools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
detach("package:phonTools", unload=TRUE)
library("phonTools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
detach("package:phonTools", unload=TRUE)
library("phonTools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
detach("package:phonTools", unload=TRUE)
library("phonTools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
detach(phonTools)
detach("phonTools")
detach("phonTools", unload = T)
detach("package:phonTools")
library(phonTools)
pickIPA(n = 1)
pickIPA(n = 1)
a <- 1:100
b -> 1:200
b -> 1:200
1:200 -> b
l <- T
l <- c(T, F)
a[57]
a <- 1:100**2
a[57]
a <- 1:100**2
a <- (1:100)^2
a[57]
rm(l)
a[4:8]
a > 100
j <- 5:10
g <- 1:10
g+j
g*j
c(g, j)
a > 100
a[a > 100]
a == a[43]
a[a == a[43]]
a[a != a[43]]
a[-43]
a[-c(43:57)]
a[a > 100]
a[a[-1] == a]
library(ggplot2)
library(ggplot2)
ggplot(mpg, aes(hwy, cyl))+
geom_point()+
theme_bw()
ggplot(mpg, aes(class, drv))+
geom_point()+
theme_bw()
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(. ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(. ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(~ class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
facet_wrap(~ class, nrow = 2)
sqrt(2) ^ 2 == 2
sqrt(2) ^ 2
sqrt(2)
sqrt(2) ^ 2
class(sqrt(2) ^ 2)
class(2)
read_csv("a,b,c
1,2,3
4,5,6")
read.csv("a,b,c
1,2,3
4,5,6")
trill <- c(
"r", # belorusian
"rʲ", # rusyn
"rʲ", # russian
"r", # uk
"rʑ", # cz
"ʒ", # kash
"rʲ/ʀʲ", # low sor
"rʲ/ʀʲ", # upper sor
"ʒ", # polish
"r", # slovak
"ʑ", # silesian
"r", # bosnian
"rʲ", # bulgarian
"r", # croatian
"r", # macedonian
"r", # slovenian
"r", # serbian
"r" # slavomolisano
)
set.seed(5)
map.feature(slavic, trill, control = F, title = "мягкий дрожащий")
library(lingtypology)
trill <- c(
"r", # belorusian
"rʲ", # rusyn
"rʲ", # russian
"r", # uk
"rʑ", # cz
"ʒ", # kash
"rʲ/ʀʲ", # low sor
"rʲ/ʀʲ", # upper sor
"ʒ", # polish
"r", # slovak
"ʑ", # silesian
"r", # bosnian
"rʲ", # bulgarian
"r", # croatian
"r", # macedonian
"r", # slovenian
"r", # serbian
"r" # slavomolisano
)
set.seed(5)
map.feature(slavic, trill, control = F, title = "мягкий дрожащий")
slavic <- c(lang.aff("East Slavic"),
lang.aff("West Slavic"),
lang.aff("South Slavic"))
slavic <- slavic[-c(2, 11, 16, 18)]
trill <- c(
"r", # belorusian
"rʲ", # rusyn
"rʲ", # russian
"r", # uk
"rʑ", # cz
"ʒ", # kash
"rʲ/ʀʲ", # low sor
"rʲ/ʀʲ", # upper sor
"ʒ", # polish
"r", # slovak
"ʑ", # silesian
"r", # bosnian
"rʲ", # bulgarian
"r", # croatian
"r", # macedonian
"r", # slovenian
"r", # serbian
"r" # slavomolisano
)
set.seed(5)
map.feature(slavic, trill, control = F, title = "мягкий дрожащий")
install.packages(c("addinslist", "circlize", "curl", "DBI", "dendextend", "FFTrees", "forcats", "irlba", "jsonlite", "lubridate", "packrat", "plotly", "quantreg", "Rcpp", "RcppEigen", "RefManageR", "RgoogleMaps", "selectr", "shiny", "shinyjs", "SparseM", "StanHeaders", "stringdist", "stringi", "stringr", "tibble", "tuneR"))
chi.kuk %>%
mutate(mean.homo =
c("less", "more")[
as.numeric(perceived.as.homo > mean(perceived.as.homo))+1
]) %>%
assign(x = new.var)
library(ggplot2)
library(dplyr)
chi.kuk %>%
mutate(mean.homo =
c("less", "more")[
as.numeric(perceived.as.homo > mean(perceived.as.homo))+1
]) %>%
assign(x = new.var)
setwd("/home/agricolamz/_DATA/OneDrive1/_Work/Scripts/_R/data Chi-kuk 2007")
chi.kuk <- read.csv("Chi.kuk.2007.csv")
setwd("/home/agricolamz/_DATA/OneDrive1/_Work/_Students/2016_Sigova_Adyghe")
adyghe <- read.csv("D1_vowels.csv", sep = "\t")
setwd("/home/agricolamz/_DATA/OneDrive1/_Work/_Handouts/2016 II HSE R/Visualization")
chi.kuk %>%
mutate(mean.homo =
c("less", "more")[
as.numeric(perceived.as.homo > mean(perceived.as.homo))+1
]) %>%
assign(x = new.var)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("readr")
